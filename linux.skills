
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+				Linux Skills											   \ 	
+							--By Sar ~!									   \	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+
+				Useful Skills For Your Applications ~!
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

1.	show your desktop when your dont't shortkeys ~ {
	ctrl + alt + D = show your desktop!
	}
----------------------------------------------------------------------------
	or look up all pdf files redirect to a text ~!
	cat | find . -name '*.pdf'  > pdf
----------------------------------------------------------------------------

2.	On ubuntu show the click_right 'open a terminal'{
	sudo apt-get install nautilus-open-terminal
	}
----------------------------------------------------------------------------

3.	Firefox show menubar when your hide the menu,{
	Tools = "Hide Menubar"
	Press 'Alt' show the menu;
	Alt + f firefox menu show = call menubar;
	}
----------------------------------------------------------------------------

4.	Programming manual;{
	man scanf printf man fsprintf  man socket;
	}	
----------------------------------------------------------------------------

5.	Gvim menu no Chinese fonts;{
	Ubuntu 10.04 Lucid Lynx默认安装将会把中文区域设置为zh_CN.utf8， 而GVim能识别的
	中文区域设置为zh_CN.UTF-8。因此GVim会在启动时报错，且无法正常加载中文菜单。 解决：
----------------------------------------------------------------------------
	cd /usr/share/vim/vim72/lang
	sudo ln -s menu_zh_cn.utf-8.vim menu_zh_cn.utf8.vim
----------------------------------------------------------------------------
	此方法使得GVim可以识别zh_CN.utf8，并采用于zh_CN.UTF-8完全相同的菜单设置。并且不
	影响系统的中文区域设置
	}
----------------------------------------------------------------------------
	
6.	How to use diff patch a library?  *.diff {
	Applying patches with patch:
	To apply a patch to a single file, change to the directory where the 
	file is located and call patch:
----------------------------------------------------------------------------
	patch < foo.patch

	These instructions assume the patch is distributed in unified format, 
	which identifies the file the patch should be applied to. If not, you 
	can specify the file on the command line:
----------------------------------------------------------------------------
	patch foo.txt < bar.patch

	Applying patches to entire directories (perhaps the more common case) is
	similar, but you have to be careful about setting a "p level". What this
	means is that, within patch files,     the files to be patched are 
	identified by path names which may be different now that the files are 
	located on your computer rather than on the computer where the patch was
	created. The p level instructs patch to ignore parts of the path name so
	that it can identify the files correctly. Most often a p level of one 
	will work, so you use:
----------------------------------------------------------------------------
	patch -p1 < baz.patch

	You should change to the top level source directory before running this
	command. If a patch level of one does not correctly identify any files 
	to patch, inspect the patch file for file names. If you see a name like

	/users/stephen/package/src/net/http.c

	and you are working in a directory that contains net/http.c, use

	patch -p5 < baz.patch

	In general, count up one for each path separator (slash character) that 
	youremove from the beginning of the path, until what's left is a path 
	that exists in your working directory. The count you reach is the p
	level.To remove a patch, use the -R flag, ie:
----------------------------------------------------------------------------
	patch -p5 -R < baz.patch
----------------------------------------------------------------------------
	Creating patches with diff:
	Using diff is simple whether you are working with single files or entire
	source directories. To create a patch for a single file, use the form:

	diff -u original.c new.c > original.patch
	To create a patch for an entire source tree, make a copy of the tree:
	cp -R original new

	Make any changes required in the directory new/. Then create a patch 
	with the following command:
----------------------------------------------------------------------------
	diff -rupN original/ new/ > original.patch

	That's all you need to get started with diff and patch. For more 
	information use:
----------------------------------------------------------------------------
	man diff
	man patch
	}
----------------------------------------------------------------------------

7.	VIM skills : find a function comment {
	vi  +  alt+shit + k look function()  linux programmer !!
	shit + insert = paste something in a terminal konsole
	}
----------------------------------------------------------------------------
8.	Gedit Gconfig Tools config the gedit~!{
	gconf-editor      gconf-merge-tree  gconf-schemas     gconftool         
	gconftool-2
----------------------------------------------------------------------------
	Use these tools to config your gedit encoding.......
	}
----------------------------------------------------------------------------

9.	The quieter you become, the more you are able to hear ...{
	>>		sudo apt-get -f install
	自动帮你安装所有包的依赖
	}
----------------------------------------------------------------------------
10.	How to extract a deb-package {
	使用ar命令解开.deb包 
	ar vx test.deb 
		|
	debian-binary 
	control.tar.gz 
	data.tar.gz 
	使用 tar 解开 data.tar.gz 即可得到deb文件中的数据文件 
	tar -xzvf data.tar.gz 
	}
----------------------------------------------------------------------------
11. What happened when press win+M  + wireshark {
	all windows become back~!
	wireshark :: A powerfull network scanf and sniffer
	dsniff + netsniff-ng + sniffit + nmap 
	more hackers' tools runniing on Linux ~nice 
	}
----------------------------------------------------------------------------
12.	Sudo apt-get install nautilus-open-terminal {
    install open-terminal console in nautilus
    }
----------------------------------------------------------------------------
13. Switch GDM and KDM on unbuntu platform {
    sudo dpkg-reconfigure gdm
    sudo dpkg-reconfigure kdm
    }
----------------------------------------------------------------------------
14. The `Fuck` Commands --> kill the process by reg-expression {
        kill -9 `ps -ef | grep key | cut -b 11-14`
    }
----------------------------------------------------------------------------
15. Push the git repo By Github {   

    set the remote git-repo: 
        git remote set-url origin ssh://git@github.com/sarmm/7zcodes.git
    push it! :  
        git push origin master

    well~! the error message: 
        git push -u origin master
        Http request Error 403
    Sth From website & infos:
     
        If you "git pull" and it says "Already up-to-date.", and still get 
        this error, it might be because one of your other branches isn't up 
        to date. Try switching to another branch and making sure that one is 
        also up-to-date before trying to "git push" again:

        Switch to branch "foo" and update it:
            $ git checkout foo
            $ git pull
        You can see the branches you've got by issuing command:

            $ git branch
----------------------------------------------------------------------------
        github项目提交失败 master -> master (non-fast-forward)
        先执行git pull
        然后再执行 git push --force origin master 
        替换原先的git push -u origin master
        git commit -a /// git merge error
    }
----------------------------------------------------------------------------
16. Convert the source & text encoding bu enca {
      enca -L zh_CN -x UTF-8 *.txt
    }
----------------------------------------------------------------------------
17. 我未曾见到一个早起，勤奋，谨慎，诚实的人抱怨命运的不好。良好的品格，
    优良的习惯，坚强的意志，是不会被所谓的假设的命运所击败的。
                                                            ----富兰克林
----------------------------------------------------------------------------
18. Find commands & reg-expression  combine with `xargs` { 
      find / -name core -exec /bin/rm -f '{}' +
      This command is equivalent to using find with xargs, only a bit 
      shorter and more efficient.  But this form of ‑exec can be combined 
      with a shell feature to solve the other problem (names with spaces).  
      The POSIX shell allows us to use:
        sh -c 'command-line' [ command-name [ args... ] ]
      (We don't usually care about the command-name, so “X”, “dummy”, “sh”, 
      or “'inline cmd'” is often used.)  Here's an example of efficiently 
      copying found files to /tmp, in a POSIX-compliant way (Posted on comp.unix.
      shell netnews newsgroup on Oct. 28 2007 by Stephane CHAZELAS):
----------------------------------------------------------------------------
      Eg:  
        find . -name '*.txt' -type f \
        -exec sh -c 'exec cp -f "$@" /tmp' X '{}' +
----------------------------------------------------------------------------
19. Running Google-chrome web browser with root {
    exec -a "$0" "$HERE/chrome" "$@" -user-data-dir   add " -user-data-dir " 
    while u want to  run chrome  as root!!
----------------------------------------------------------------------------
20. Sth luck tips {
    In short, application programmers don't usually make good embedded 
    system programmers, but embedded system programmers can do anything. 
    Well, almost anything.
----------------------------------------------------------------------------
21. Oh man! what r u doing --> it's not work now, X-server is over~! {
    the `fucking cmds`:
----------------------------------------------------------------------------
   sudo ln -f -s /tmp/tcloop/libx11-xcb/usr/local/lib/libX11.so.6.3.0 /usr/lib/libX11.so.6.3.0
   sudo ln -f -s /tmp/tcloop/libx11-xcb/usr/local/lib/libX11.so.6.3.0 /usr/lib/libX11.so
   sudo ln -f -s /tmp/tcloop/libx11-xcb/usr/local/lib/libX11.so.6.3.0 /usr/lib/libX11.so.6
----------------------------------------------------------------------------
   Now, the X-sever Process doesn't work, how 2 repair it?
   reboot && entery the recovey mode, text console mode, none gui~!
   Re-install libx11:
----------------------------------------------------------------------------
    aptitude reinstall libx11-6  
   ok successful! recovery mode!
   }
----------------------------------------------------------------------------
22. Extra the 7z files:
        7z x *.7z -o{dir} ! -o\\\\no space!
    eg: 7z x aa.7z -o~/sar
    }
----------------------------------------------------------------------------
23. 
